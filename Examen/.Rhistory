a<-10
V1 <- C(10,5,3,7)#Vector
v4<-seq(20,40,2)#initial, final, increment
mean(v4)#media
sum(v4)/length(v4)
sort(v4,true)
v<-seq(3,500,3)
v(10,20)
v<-seq(3,500,3)
v[10:20]
#initialisation
v<-seq(3,500,3)
#subsetting elements in position 10 until
v[10:20]
c=>0
c=>0
for (i=>0 in v) {
c=>0
#initialisation
v<-seq(3,500,3)
#subsetting elements in position 10 until20
v[10:20]
#locate element 36
c=>0
clear
#initialisation
v<-seq(3,500,3)
#subsetting elements in position 10 until20
v[10:20]
#locate element 36
c=>0
#locate element 36
c<-0
for (i in v) {
if(v[i] == 36){
c<-i
}
}
#initialisation
v<-seq(3,500,3)
#subsetting elements in position 10 until20
v[10:20]
#locate element 36
c<-0
for (i in v) {
if(v[i] == 36){
c<-i
}
}
#locate element 36
c<-0
for (i in 1:length(v)) {
if(v[i] == 36){
c<-i
}
}
c
#show elements greater than 72
v[which(x>72)]
#initialisation
v<-seq(3,500,3)
#subsetting elements in position 10 until20
v[10:20]
v[c(10,20)]#only show pos 10 and 20
#locate element 36
c<-0
for (i in 1:length(v)) {
if(v[i] == 36){
c<-i
}
}
c
which(x==36)#returns position of the element that tge stament
#show elements greater than 72
v[v>72]
#delete from the vector the 10 largest numbers
v <- v[1:(length(v)-11)]
v
#Fill in the following vectors: v1: 1 2 3
v[1:3]
View(v)
#Fill in the following vectors: v1: 1 2 3
v[1:3]
V1 <- C(10,5,3,7)#Vector
a<-10
V1 <- C(10,5,3,7)#Vector
v2<- (45:78)#sequence of numbers
v4<-seq(1,3,1)
v<-seq(1,3,1)
v
#v2: 1 2 3 1 2 3 1 2 3
v2 <- rep(v,3)
v2
#v3: 0 10 20 30 40 50 60 70 80 90 100
v<-seq(0,100,10)
#v3: 0 10 20 30 40 50 60 70 80 90 100
v3<-seq(0,100,10)
v3
(1000,0,-100)
#v4: 1000 900 800 700 600 500 400 300 200 100 0
v4<-seq(1000,0,-100)
v4
#v5: 1 1 1 1 1
v5 <-rep(1,5)
v5
setwd("~/GitHub/ExperimentOfDataAnalyticsWithR/Examen")
#Eduard Corral
class2022 <- read.csv("gpa", sep=",")
#Eduard Corral
data <- read.csv("gpa.csv", sep=",")
View(data)
#1
table(data)
#1
str(data)
#2
data.rename(columns = {'colgpa':'gpa'}, inplace = True)
#2
data(columns = {'colgpa':'gpa'}, inplace = True)
#1
str(data)
list(data)
#2
data.rename(columns={'colgpa':'gpa'},inplace=true)
#2
data.rename(columns={'colgpa':'gpa'},inplace =true)
#2
import pandas as pd
data.rename(columns={'colgpa':'gpa'},inplace =true)
#2
colnames(data)[6] <- "gpa"
#3
unique(data$white)
#3
unique(data$white)
data$white[data$white=="true" ] <- "TRUE"
data$white[data$white=="false" ] <- "FALSE"
data$white[data$black=="true" ] <- "TRUE"
data$white[data$black=="false" ] <- "FALSE"
unique(data$white)
#4
length(table(data$sat[data$gpa>3]))
#4
length(table(data$sat[data$gpa>3]))
length(data$sat[data$gpa>3]))
length(data$sat[data$gpa>3])
#5
males <- length(data$sat[data$gpa>3 & data$female==false])
#5
males <- length(data$sat[data$gpa>3 & data$female=="false"])
males
#5
males <- length(data$sat[data$gpa>3 & data$female=="FALSE"])
males
males
famele <- length(data$sat[data$gpa>3 & data$female=="TRUE"])
famele
#5
males <- length(data$sat[data$gpa>3 & data$female=="FALSE"])
males
famele <- length(data$sat[data$gpa>3 & data$female=="TRUE"])
famele
#6
boxplot(data$gpa)
#6
boxplot(data$gpa,lebel = c("males","fameles"))
#6
boxplot(data$gpa,ylab ="GPA",lebel = c("males","fameles"))
#6
boxplot(data$gpa,xlab ="GPA",lebel = c("males","fameles"))
#7
numAthletes<-length(data$athlete[data$athlete==true])
#7
numAthletes<-length(data$athlete[data$athlete=="TRUE"])
numAthletes
#7
numAthletes<-length(data$athlete[data$athlete=="TRUE"])
numAthletes
numAthletesFameles<-length(data$athlete[data$athlete=="TRUE" & data$female=="TRUE"])
numAthletesFameles
numAthletesFameles
percentage<- (numAthletesFameles *100)/numAthletes
percentage
#8
sat<- data$sat
sat
sat
data$satL<-c()
View(data)
View(data)
sat
data$satL<-c()
sat
data$satL<sat
data$satL<sat
data ['satL']<-sat
data ['satL']<-sat
data$satL[data$satL>=400 & data$satL <=800 ] <- "C"
data ['satL']<-sat
data$satL[data$satL>=400 & data$satL <800 ] <- "C"
data$satL[data$satL>=800 & data$satL <1200 ] <- "C"
data$satL[data$satL>=1200 & data$satL <=1600 ] <- "C"
data ['satL']<-sat
data$satL[data$satL>=400 & data$satL <800 ] <- "C"
data$satL[data$satL>=800 & data$satL <1200 ] <- "B"
data$satL[data$satL>=1200 & data$satL <=1600 ] <- "A"
data ['satL']<-sat
data$satL[data$satL>=400 & data$satL <800 ] <- "C"
data$satL[data$satL>=800 & data$satL <1200 ] <- "B"
data$satL[data$satL>=1200 & data$satL <=1600 ] <- "A"
View(data)
View(data)
data ['satL']<-sat
data$satL[data$satL>= 400 & data$satL < 800 ] <- "C"
data$satL[data$satL>= 800 & data$satL < 1200 ] <- "B"
data$satL[data$satL>= 1200 & data$satL <= 1600 ] <- "A"
data ['satL']<-sat
data$satL[data$satL>= 400 & data$satL < 800 ] <- "CC"
data$satL[data$satL>= 800 & data$satL < 1200 ] <- "BB"
data$satL[data$satL>= 1200 & data$satL <= 1600 ] <- "AA"
#Eduard Corral
#Option B
data <- read.csv("gpa.csv", sep=",")
#1
str(data)
list(data)
#2
colnames(data)[6] <- "gpa"
#3
unique(data$white)
data$white[data$white=="true" ] <- "TRUE"
data$white[data$white=="false" ] <- "FALSE"
data$white[data$black=="true" ] <- "TRUE"
data$white[data$black=="false" ] <- "FALSE"
unique(data$white)
#4
length(data$sat[data$gpa>3])
#5
males <- length(data$sat[data$gpa>3 & data$female=="FALSE"])
males
famele <- length(data$sat[data$gpa>3 & data$female=="TRUE"])
famele
#6
boxplot(data$gpa,xlab ="GPA",lebel = c("males","fameles"))
#7
numAthletes<-length(data$athlete[data$athlete=="TRUE"])
numAthletes
numAthletesFameles<-length(data$athlete[data$athlete=="TRUE" & data$female=="TRUE"])
numAthletesFameles
percentage<- (numAthletesFameles *100)/numAthletes
percentage
#8
sat<- data$sat
data ['satL']<-sat
data$satL[data$satL>= 400 & data$satL < 800 ] <- "C"
data$satL[data$satL>= 800 & data$satL < 1200 ] <- "B"
data$satL[data$satL>= 1200 & data$satL <= 1600 ] <- "A"
#Eduard Corral
#Option B
data <- read.csv("gpa.csv", sep=",")
#Eduard Corral
#Option B
data <- read.csv("gpa.csv", sep=",")
#1
str(data)
list(data)
#2
colnames(data)[6] <- "gpa"
#3
unique(data$white)
data$white[data$white=="true" ] <- "TRUE"
data$white[data$white=="false" ] <- "FALSE"
data$white[data$black=="true" ] <- "TRUE"
data$white[data$black=="false" ] <- "FALSE"
unique(data$white)
#4
length(data$sat[data$gpa>3])
#5
males <- length(data$sat[data$gpa>3 & data$female=="FALSE"])
males
famele <- length(data$sat[data$gpa>3 & data$female=="TRUE"])
famele
#6
boxplot(data$gpa,xlab ="GPA",lebel = c("males","fameles"))
#7
numAthletes<-length(data$athlete[data$athlete=="TRUE"])
numAthletes
numAthletesFameles<-length(data$athlete[data$athlete=="TRUE" & data$female=="TRUE"])
numAthletesFameles
percentage<- (numAthletesFameles *100)/numAthletes
percentage
#8
sat<- data$sat
data ['satL']<-sat
data$satL[data$satL>= 400 & data$satL < 800 ] <- "C"
data$satL[data$satL>= 800 & data$satL < 1200 ] <- "B"
data$satL[data$satL>= 1200 & data$satL <= 1600 ] <- "A"
data ['satL']<-sat
data$satL[data$satL >= 400 & data$satL < 800 ] <- "C"
data$satL[data$satL >= 800 & data$satL < 1200 ] <- "B"
data$satL[data$satL >= 1200 & data$satL <= 1600 ] <- "A"
#8
sat<- data$sat
data ['satL']<-sat
data$satL[as.numeric(data$satL) >= 400 & as.numeric(data$satL) < 800 ] <- "C"
data$satL[as.numeric(data$satL) >= 400 & as.numeric(data$satL) < 800 ] <- "C"
data$satL[as.numeric(data$satL) >= 800 & as.numeric(data$satL) < 1200 ] <- "B"
data$satL[as.numeric(data$satL) >= 1200 & as.numeric(data$satL) <= 1600 ] <- "A"
#9
pie(data$satL)
#9
numberofA<-length(data$sat[data$satL=="A"])
numberofB<-length(data$sat[data$satL=="B"])
numberofC<-length(data$sat[data$satL=="C"])
c(a,b,c)
numberofC<-length(data$sat[data$satL=="C"])
c(numberofA,numberofB,numberofC)
pie(c)
numberofC<-length(data$sat[data$satL=="C"])
vectorPie<-c(numberofA,numberofB,numberofC)
pie(vectorPie)
vectorPie<-c(numberofA,numberofB,numberofC)
pie(vectorPie,labels = c("A","B","C"))
#10
total<-sum(data$gpa[data$female=="TRUE"])
counter<-length(data$gpa[data$female=="TRUE"])
meanOfFameles <-total/counter
meanOfFameles
#10
total<-sum
total
#10
total<-sum(data$gpa[data$female=="TRUE"])
total
counter<-length(data$gpa[data$female=="TRUE"])
counter
#11
values<- sort(data$sat, decreasing = TRUE)
values<- values[0:10]
values
positionsToDelete <- which(is.element(data$sat,values))
positionsToDelete
data <- data[-positions, ]
positionsToDelete
data <- data[-positionsToDelete, ]
total<-sum(data$gpa[data$female=="TRUE"])
total
adad<-data$gpa[data$female=="TRUE"]
adad
total<-sum(data$gpa[data$female=="TRUE"],na.rm = FALSE)
total
total<-sum(data$gpa[data$female=="TRUE"],na.rm = TRUE)
total
counter<-length(data$gpa[data$female=="TRUE"])
counter
meanOfFameles <-total/counter
meanOfFameles
