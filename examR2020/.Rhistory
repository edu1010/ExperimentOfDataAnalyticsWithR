#exemple lineal regresion
load("marketing.rda")
ds<-marketing#ds data sheet
setwd("~/GitHub/ExperimentOfDataAnalyticsWithR/linearRegresion")
#exemple lineal regresion
load("marketing.rda")
ds<-marketing#ds data sheet
#METHOD
#train the algotith
mylm<- lm(sales~facebook,ds)
#exemple lineal regresion
load("marketing.rda")
ds<-marketing#ds data sheet
#METHOD
#train the algotith
mylm<- lm(sales~facebook,ds)
# look at the coeficioent
mylm
#4 use the  model to predict new case
#one case
mylm
invest <-100
new.ds <- data.frame(facebook=invest)
predict(mylm,new.ds)
#perform the computations manualy
#several cases
ds$sales
plot(ds$facebook,ds$sales)
abline(mylm)
fb.invest<-seq(0,500,50)
new.ds<data.frame(facebook,ds$sales)
fb.invest<-seq(0,500,50)
new.ds<-data.frame(facebook,ds$sales)
fb.invest<-seq(0,500,50)
new.ds<-data.frame(facebook=fb.invest)
predict(mylm, new.ds)
setwd("~/GitHub/ExperimentOfDataAnalyticsWithR/examR2020")
read(accidents.csv,sep=",")
read.csv(accidents.csv,sep=",")
read.csv(accidents.csv)
read.csv(accidents.csv,sep=",")
read.csv(accidents.csv,sep=",")
read.csv(accidents.csv,sep=",")
read.csv(accidents.csv,sep=",")
read.csv("accidents.csv",sep=",")
data<-read.csv("accidents.csv",sep=",")
View(data)
View(data)
#1. How many different districts there are in the dataset (column DistN)?
data(data$DisN)
#1. How many different districts there are in the dataset (column DistN)?
numDistrict<-length(table(data$DistN))
numDistrict
#2. List the names of the different districts in increasing alphabetical order.
alfabetic<-sort(data$DistN,false)
#2. List the names of the different districts in increasing alphabetical order.
alfabetic<-sort(data$DistN,decreasing = FALSE)
alfabetic
alfabetic<-sort(unique(data$DistN),decreasing = FALSE)
alfabetic<-sort(unique(data$DistN),decreasing = FALSE)
alfabetic
alfabetic<-sort(unique(data$DistN),decreasing = True)
alfabetic
alfabetic<-sort(unique(data$DistN),decreasing = TRUE)
alfabetic
alfabetic<-sort(unique(data$DistN),decreasing = FALSE)
data<-read.csv("accidents.csv",sep=",",encoding ="Latin-1")
#1. How many different districts there are in the dataset (column DistN)?
numDistrict<-length(table(data$DistN))#table quantas valores en cada columna
numDistrict
data<-read.csv("accidents.csv",sep=",",encoding ="UT8-8",fileEncoding = "latin1")
#1. How many different districts there are in the dataset (column DistN)?
numDistrict<-length(table(data$DistN))#table quantas valores en cada columna
numDistrict
View(data)
View(data)
#3. Every row refers to an injured person in the accident. Thus, one accident may have more than one row.
#In any case, calculate how many injured people there are for each district.
table(data$DistN)
#4. Then, print the name of the district with the greatest number of injured people.
max(data$DistN)
#3. Every row refers to an injured person in the accident. Thus, one accident may have more than one row.
#In any case, calculate how many injured people there are for each district.
distritos <- table(data$DistN)
#4. Then, print the name of the district with the greatest number of injured people.
distritos
#4. Then, print the name of the district with the greatest number of injured people.
sort(distritos)
#4. Then, print the name of the district with the greatest number of injured people.
sort(distritos, descreasing=TRUE)
#4. Then, print the name of the district with the greatest number of injured people.
sort(distritos, descreasing=FALSE)
#4. Then, print the name of the district with the greatest number of injured people.
aux=sort(distritos, descreasing=FALSE)
aux[0]
aux[1]
#4. Then, print the name of the district with the greatest number of injured people.
aux=sort(distritos, descreasing=TRUE)
aux[1]
#4. Then, print the name of the district with the greatest number of injured people.
aux=sort(distritos, descreasing=TRUE)
aux[1]
aux[]
strict with the greatest number of injured people.
#4. Then, print the name of the district with the greatest number of injured people.
aux=sort(distritos, descreasing=TRUE)
#4. Then, print the name of the district with the greatest number of injured people.
aux=sort(distritos, decreasing = TRUE )
aux[1]
#5. Calculate how many pedestrians (“Vianant”; look at column PersT) are involved, and how many of
#them resulted in “Ferit greu” (as reported in column Vict).
length(which(data$PersT=="Vianant"))
sum(data$PersT =="Viannant")
length(data$PersT[data$PersT=="Viannant"])
#5. Calculate how many pedestrians (“Vianant”; look at column PersT) are involved, and how many of
#them resulted in “Ferit greu” (as reported in column Vict).
length(which(data$PersT=="Vianant"))
sum(data$PersT =="Viannant")
sum(data$PersT =="Vianant")
length(data$PersT[data$PersT=="Vianant"])
length(data$PersT[data$PersT=="Vianant" & data$Vict=="Ferit greu"])
length(data$PersT[data$PersT=="Vianant" & data$Vict=="Ferit greu"])
#6. Calculate the mean age of the injured people that died in the accident. To know who died in the accident, look at column Vict.
table(data$Vict)
#"Mort" "Mort (dins 24h posteriors accident)"
mean(data$Edad[data$Vict=="Mort" |data$Vict=="Mort (dins 24h posteriors accident" ])
#"Mort" "Mort (dins 24h posteriors accident)"
data$Edad<-as.numeric(data$Edad)
mean(data$Edad[data$Vict=="Mort" | data$Vict=="Mort (dins 24h posteriors accident" ])
#3. Every row refers to an injured person in the accident. Thus, one accident may have more than one row.
#In any case, calculate how many injured people there are for each district.
distritos <- table(data$DistN)
#4. Then, print the name of the district with the greatest number of injured people.
aux=sort(distritos, decreasing = TRUE )
#"Mort" "Mort (dins 24h posteriors accident)"
data$Edad<-as.numeric(data$Edad)
data$Edad<-as.numeric(data$Edad)
mean(data$Edad[data$Vict=="Mort" | data$Vict=="Mort (dins 24h posteriors accident)"])
#7. Print a plot that shows how many accidents (injured people) there are per hour. Column Hora stores
#the hour in which the accident happened.
plot(data$Vict,data$Hora)
table(data$Hora)
plot(data$Hora)
plot(table(data$Hora))
#8. Plot a pie chart that shows the proportion of men and women in the dataset. You need to use column Sexo.
pie(data$Sexo)
#8. Plot a pie chart that shows the proportion of men and women in the dataset. You need to use column Sexo.
pie(data$Sexo)
total<-homes+dones
pie(homes,dones)
pie(homes,dones)
#8. Plot a pie chart that shows the proportion of men and women in the dataset. You need to use column Sexo.
homes<-length(data$Sexo[data$Sexo=="Home"])
total<-homes+dones
dones<-length(data$Sexo[data$Sexo=="Dona"])
pie(homes,dones)
v<-c(homes,dones)
pie(v)
data2 <-data[-data$X.1,]
View(data2)
View(data2)
data2 <-data[,-data$X.1]
View(data2)
View(data2)
View(data2)
View(data2)
data2 <-data[,-data$X.1]
data2 <-data[,-data$X.1]
view(data2)
View(data2)
View(data2)
data2 <-data[-data$X.1,]
View(data)
View(data)
data2 <-data[ ,-data$X.1]
View(data2)
accidents <- data[data$Hora>=0 & data$Hora<=6 ]
#9. Delete column X.1 from the dataset
data2 <-data[ ,-2]
View(data2)
data2 <- data[ , ]
positions <- which(data$Hora>=0 & data$Hora<=6 )
data2 <- data[-positions, ]
View(data2)
View(data2)
source("~/ExperimentOfDataAnalyticsWithR-main/experiment.R")
